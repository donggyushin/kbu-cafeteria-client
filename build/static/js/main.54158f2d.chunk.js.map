{"version":3,"sources":["actions/types.tsx","components/private/Main/LinkButtons/presenter.tsx","components/private/Main/LinkButtons/index.tsx","components/private/Main/LinkButtons/container.tsx","components/private/Main/presenter.tsx","components/private/Main/container.tsx","components/private/Main/index.tsx","actions/user.tsx","components/private/PostMenu/Navigation/presenter.tsx","components/private/PostMenu/Navigation/index.tsx","components/private/PostMenu/Header/presenter.tsx","components/private/PostMenu/Header/index.tsx","components/private/PostMenu/CellContainer/GrayCell/presenter.tsx","components/private/PostMenu/CellContainer/GrayCell/index.tsx","components/private/PostMenu/CellContainer/WhiteCell/presenter.tsx","components/private/PostMenu/CellContainer/WhiteCell/index.tsx","components/private/PostMenu/CellContainer/presenter.tsx","components/private/PostMenu/CellContainer/index.tsx","components/private/PostMenu/Form/Header/presenter.tsx","components/private/PostMenu/Form/Header/index.tsx","components/private/PostMenu/Form/Body/Form/presenter.tsx","components/private/PostMenu/Form/Body/Form/index.tsx","components/private/PostMenu/Form/Body/List/presenter.tsx","components/private/PostMenu/Form/Body/List/index.tsx","components/private/PostMenu/Form/Body/DailyMenuFormContainer/List/presenter.tsx","components/private/PostMenu/Form/Body/DailyMenuFormContainer/List/index.tsx","components/private/PostMenu/Form/Body/DailyMenuFormContainer/presenter.tsx","components/private/PostMenu/Form/Body/DailyMenuFormContainer/index.tsx","components/private/PostMenu/Form/Body/FixMenuForm/List/presenter.tsx","components/private/PostMenu/Form/Body/FixMenuForm/List/index.tsx","components/private/PostMenu/Form/Body/FixMenuForm/presenter.tsx","components/private/PostMenu/Form/Body/FixMenuForm/index.tsx","components/private/PostMenu/Form/Body/presenter.tsx","components/private/PostMenu/Form/Body/index.tsx","components/private/PostMenu/Form/presenter.tsx","components/private/PostMenu/Form/index.tsx","components/global/GlobalNavigation/presenter.tsx","components/global/GlobalNavigation/index.tsx","components/global/GlobalNavigation/container.tsx","components/private/PostMenu/presenter.tsx","components/private/PostMenu/container.tsx","components/private/PostMenu/index.tsx","components/private/MenuView/DatePicker/FromPicker/presenter.tsx","components/private/MenuView/DatePicker/FromPicker/index.tsx","components/private/MenuView/DatePicker/ToPicker/presenter.tsx","components/private/MenuView/DatePicker/ToPicker/index.tsx","components/private/MenuView/DatePicker/Button/presenter.tsx","components/private/MenuView/DatePicker/Button/index.tsx","components/private/MenuView/DatePicker/presenter.tsx","components/private/MenuView/DatePicker/index.tsx","components/private/MenuView/presenter.tsx","components/private/MenuView/index.tsx","components/private/MenuView/container.tsx","components/private/Menus/MenusContainer/Card/MenuBox/Header/presenter.tsx","components/private/Menus/MenusContainer/Card/MenuBox/Header/index.tsx","components/private/Menus/MenusContainer/Card/MenuBox/Menu/presenter.tsx","components/private/Menus/MenusContainer/Card/MenuBox/Menu/index.tsx","components/private/Menus/MenusContainer/Card/MenuBox/presenter.tsx","components/private/Menus/MenusContainer/Card/MenuBox/index.tsx","components/private/Menus/MenusContainer/Card/Header/presenter.tsx","components/private/Menus/MenusContainer/Card/Header/index.tsx","utils/index.tsx","components/private/Menus/MenusContainer/Card/presenter.tsx","components/private/Menus/MenusContainer/Card/index.tsx","components/private/Menus/MenusContainer/presenter.tsx","components/private/Menus/MenusContainer/index.tsx","components/private/Menus/presenter.tsx","components/private/Menus/container.tsx","components/private/Menus/index.tsx","actions/menuBoard.tsx","components/private/privateComponent/presenter.tsx","components/private/privateComponent/index.tsx","components/private/privateComponent/container.tsx","components/public/LoginForm/Form/presenter.tsx","components/public/LoginForm/Form/index.tsx","components/public/LoginForm/presenter.tsx","components/public/LoginForm/container.tsx","components/public/LoginForm/index.tsx","components/public/publicComponent/presenter.tsx","components/public/publicComponent/index.tsx","components/public/publicComponent/container.tsx","components/global/Loading/presenter.tsx","components/global/Loading/index.tsx","App.tsx","serviceWorker.ts","reducer/user.tsx","reducer/menu.tsx","reducer/menuBoard.tsx","reducer/loading.tsx","reducer/index.tsx","index.tsx","consts/index.tsx","actions/menu.tsx"],"names":["TURN_ON_LOADING","TURN_DOWN_LOADING","USER_LOGIN","USER_LOGOUT","FETCH_MENUS","PUT_NEW_MENU","FETCH_MENU_BOARDS","Presenter","logoutButtonClicked","className","to","style","cursor","onClick","LinkButtons","this","props","React","Component","Container","styled","div","userLogout","MainComponent","connect","state","dispatch","type","Year","Row","LeftArrow","i","RightArrow","Month","Navigation","year","month","rightArrowClicked","leftArrowClicked","RedCell","BlueCell","CalendarHeader","id","GrayCell","Day","InnerContainer","Column","LunchLabel","DinnerLabel","Menu","WhiteCell","menu","onClickCell","_id","day","lunch","menus","map","menuText","key","dinner","CellContainer","offdays","menuObjects","grayCells","index","push","Text","XButtonContainer","XButton","FormHeader","xbuttonClicked","useStyles","makeStyles","theme","createStyles","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","width","Form","addNewMenu","newLunch","newDinner","handleNewMenuInput","classes","TextField","label","value","onChange","margin","variant","name","onKeyPress","e","ButtonContainer","List","deleteMenu","Button","color","text","ListContainer","DailyMenuForm","newDaily","dailyMenus","fullWidth","daily","FixMenuForm","newFix","fixMenus","FormBody","handlePrice","dailyPrice","fixPrice","dailyPriceInputEnterPressed","dailyPriceXButtonTapped","fixPriceInputEnterPressed","fixPriceXButtonTapped","lunchPrice","dinnerPrice","fix","onKeyDown","dailyPrices","price","fixPrices","Card","SubmitButtonContainer","selectedCell","submitButtonClicked","HomeICon","background","GlobalNavigationBar","form","loading","GlobalNavigation","Date","getFullYear","getMonth","days","updatedFixPrices","filter","index2","setState","updatedDailyPrices","event","menuObject","console","log","putNewMenu","target","updatedLunchs","updatedSelectedCell","updatedDinners","updatedFixs","updatedDaily","updatedMenu","clickedCell","setDaysAndOffDays","setMenuObjects","fetchMenus","dayOfWeek","getDay","getOffDays","getDate","PostMenu","FromPicker","handleFromDateChange","fromDate","selected","ToPicker","handleToDateChange","toDate","NextButton","nextButtonClicked","size","UpperContainer","LowerContainer","BigText","PickerContainer","Space","DatePicker","MenuView","from","getTime","window","location","href","date","setDate","Header","height","MenuBox","CardHeader","getDayNameFromYearMonthDay","MenusContainer","NavigationButtonContainer","date1","date2","match","params","fetchMenuBoards","Menus","menuBoard","axios","get","KBU_CAFETERIA_SERVER","headers","localStorage","getItem","then","res","data","ok","error","alert","catch","err","withRouter","path","Main","PrivateComponent","email","password","handleInput","loginButtonClicked","marginBottom","userLogin","LoginForm","post","token","user","message","PublicComponent","Loading","AppContainer","isLoggedIn","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","phone","userLogoutReducer","action","removeItem","userLoginReducer","setItem","putMenu","updatedMenus","object","getMenus","fetchMenuboardsReducer","turnDownLoadingReducer","turnOnLoadingReducer","allReducers","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","put","__dirname"],"mappings":"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","file":"static/js/main.54158f2d.chunk.js","sourcesContent":["// Loading 과 관련된 reducer action types\n\nexport const TURN_ON_LOADING = 'TURN_ON_LOADING'\nexport const TURN_DOWN_LOADING = 'TURN_DOWN_LOADING'\n\n// User와 관련된 reducer action types\n\nexport const USER_LOGIN = 'USER_LOGIN'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\n// Menu 와 관련된 reducer action types \nexport const FETCH_MENUS = 'FETCH_MENUS'\nexport const PUT_NEW_MENU = 'PUT_NEW_MENU'\n\n// MenuBoard 와 관련된 reducer action types \nexport const FETCH_MENU_BOARDS = 'FETCH_MENU_BOARDS'","import React from 'react'\nimport './styles.css'\nimport { Link } from 'react-router-dom'\n\ninterface IProps {\n    logoutButtonClicked: () => void\n}\n\nconst Presenter: React.FC<IProps> = ({\n    logoutButtonClicked\n}) => {\n    return <div className=\"middle\">\n        <Link className=\"btn\" to={'/post'}>\n            <div>POST</div>\n        </Link>\n        <Link className=\"btn\" to={'/view'}>\n            <div>VIEW</div>\n            <div>MENU</div>\n        </Link>\n        <div style={{\n            cursor: 'pointer'\n        }}\n            onClick={logoutButtonClicked}\n            className=\"btn\">\n            <div>LOGOUT</div>\n        </div>\n    </div>\n}\n\nexport default Presenter","import LinkButtons from './container'\nexport default LinkButtons","import React from 'react'\nimport Presenter from './presenter'\n\ninterface IProps {\n    logoutButtonClicked: () => void\n}\n\nclass Container extends React.Component<IProps> {\n    render() {\n        const { logoutButtonClicked } = this.props;\n        return <Presenter\n            logoutButtonClicked={logoutButtonClicked}\n        />\n    }\n}\n\nexport default Container","import React from 'react'\nimport styled from 'styled-components'\nimport LinkButtons from './LinkButtons'\n\ninterface IProps {\n    logoutButtonClicked: () => void\n}\n\nconst Container = styled.div`\n    width:100%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    height:100vh;\n    justify-content:center;\n    background-image:url('wallpaper.jpg');\n    background-repeat:no-repeat;\n    background-size:100% 100%;\n    object-fit:contain;\n`\n\n\nconst Presenter: React.FC<IProps> = ({\n    logoutButtonClicked\n}) => {\n    return <Container>\n        <LinkButtons\n            logoutButtonClicked={logoutButtonClicked}\n        />\n    </Container>\n}\n\nexport default Presenter","import React from 'react'\nimport Presenter from './presenter'\nimport { connect } from 'react-redux'\nimport { IState } from '../../../types';\nimport { userLogout } from '../../../actions/user'\n\ninterface IProps {\n    userLogout: () => void\n}\n\nclass Container extends React.Component<IProps> {\n    render() {\n        const { logoutButtonClicked } = this;\n        return <Presenter\n            logoutButtonClicked={logoutButtonClicked}\n        />\n    }\n\n    logoutButtonClicked = () => {\n        this.props.userLogout()\n    }\n}\n\nconst mapStateToProps = (state: IState) => {\n    return {}\n}\n\nexport default connect(\n    mapStateToProps, {\n    userLogout\n}\n)(Container)","import MainComponent from './container'\nexport default MainComponent","import { Dispatch } from \"react\";\nimport { IUser } from \"../types\";\nimport axios from 'axios'\nimport { KBU_CAFETERIA_SERVER } from \"../consts\";\nimport { USER_LOGIN, TURN_ON_LOADING, TURN_DOWN_LOADING, USER_LOGOUT } from \"./types\";\n\ninterface IDispatch {\n    type: string\n    user?: IUser\n    token?: string\n}\n\ninterface ILoginResponse {\n\n    ok: boolean\n    error: string\n    token: string\n    user: IUser\n\n}\n\nexport const userLogout = () => (dispatch: Dispatch<IDispatch>) => {\n    dispatch({\n        type: USER_LOGOUT\n    })\n}\n\nexport const userLogin = (email: string, password: string) => (dispatch: Dispatch<IDispatch>) => {\n    dispatch({\n        type: TURN_ON_LOADING\n    })\n\n    axios.post(`${KBU_CAFETERIA_SERVER}user/login`, {\n        email,\n        password\n    })\n        .then(res => res.data)\n        .then((data: ILoginResponse) => {\n            const {\n                ok,\n                error,\n                token,\n                user\n            } = data\n            console.log('user:', user)\n            if (ok) {\n\n                dispatch({\n                    type: USER_LOGIN,\n                    user,\n                    token\n                })\n\n            } else {\n\n                alert(error)\n\n            }\n        })\n        .catch(err => {\n\n            console.error(err)\n            alert(err.message)\n\n        })\n\n\n    dispatch({\n        type: TURN_DOWN_LOADING\n    })\n}","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n    year: number\n    month: number\n    rightArrowClicked: () => void\n    leftArrowClicked: () => void\n}\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nconst Year = styled.div`\n    font-size: 34px;\n    margin-bottom: 19px;\n`\n\nconst Row = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n`\n\nconst LeftArrow = styled.i`\n    font-weight: 900;\n    font-size: 22px;\n    padding: 15px;\n`\n\nconst RightArrow = styled.i`\n    font-weight: 900;\n    font-size: 22px;\n    padding: 15px;\n`\n\nconst Month = styled.div`\n    font-size: 33px;\n    margin-right: 17px;\n    margin-left: 17px;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    year,\n    month,\n    rightArrowClicked,\n    leftArrowClicked\n}) => {\n    return <Container>\n        <Year>{year}</Year>\n        <Row>\n            <LeftArrow\n                className={'fas fa-chevron-left'}\n                onClick={leftArrowClicked}\n            />\n            <Month>{month + 1}</Month>\n            <RightArrow\n                className={'fas fa-chevron-right'}\n                onClick={rightArrowClicked}\n            />\n        </Row>\n    </Container>\n}\n\nexport default Presenter","import Navigation from './presenter'\nexport default Navigation","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n}\n\nconst Container = styled.div`\n    margin-top: 36px;\n    width: 1165px;\n    display:flex;\n    flex-wrap: wrap;\n`\n\nconst RedCell = styled.div`\n    width:164px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    background:#e74c3c;\n    color:white;\n    border:1px solid white;\n`\n\nconst BlueCell = styled.div`\n    width:164px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    background:#273c75;\n    color:white;\n    border:1px solid white;\n`\n\n\nconst Presenter: React.FC<IProps> = () => {\n    return <Container id={'cell-container'}>\n        <RedCell\n        >\n            일\n        </RedCell>\n        <BlueCell\n        >\n            월\n        </BlueCell>\n        <BlueCell\n        >\n            화\n        </BlueCell>\n        <BlueCell\n\n        >\n            수\n        </BlueCell>\n        <BlueCell\n        >\n            목\n        </BlueCell>\n        <BlueCell\n        >\n            금\n        </BlueCell>\n        <BlueCell\n        >\n            토\n        </BlueCell>\n    </Container>\n}\n\nexport default Presenter","import CalendarHeader from './presenter'\nexport default CalendarHeader","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    width:164px;\n    border:1px solid white;\n    height:120px;\n    background:rgba(225,225,225,0.2);\n`\n\nconst Presenter: React.FC = () => {\n    return <Container className={'cell'}>\n\n    </Container>\n}\n\nexport default Presenter","import GrayCell from './presenter'\nexport default GrayCell","import React from 'react'\nimport styled from 'styled-components'\nimport { IMenu } from '../../../../../types'\n\ninterface IProps {\n    menu: IMenu\n    onClickCell: (id: string) => void\n}\n\nconst Container = styled.div`\n    width:164px;\n    border:1px solid white;\n    height:120px;\n`\n\nconst Day = styled.div`\n    margin-left:3px;\n    color:gray;\n`\n\nconst InnerContainer = styled.div`\n    width:100%;\n    height:100%;\n    display:flex;\n`\n\nconst Column = styled.div`\n    width:50%;\n    height:87%;\n    display:flex;\n    flex-direction:column;\n    align-items:flex-start;\n    overflow:hidden;\n`\n\nconst LunchLabel = styled.div`\n    background: #273c75;\n    color: white;\n    border-radius: 5px;\n    padding: 2px;\n    font-size: 12px;\n    margin-bottom:4px;\n`\n\nconst DinnerLabel = styled.div`\n    background: #e74c3c;\n    color: white;\n    border-radius: 5px;\n    padding: 2px;\n    font-size: 12px;\n    margin-bottom:4px;\n`\n\nconst Menu = styled.div`\n    font-size:11px;\n    color:black;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    menu,\n    onClickCell\n}) => {\n    return <Container\n        onClick={() => {\n            onClickCell(menu._id)\n        }}\n        className={'cell'}>\n        <Day>\n            {menu.day}\n        </Day>\n        <InnerContainer>\n            <Column>\n                <LunchLabel>\n                    중식\n                </LunchLabel>\n                {menu.lunch.menus.map((menuText, i) => {\n                    return <Menu key={i}>{menuText}</Menu>\n                })}\n            </Column>\n            <Column>\n                <DinnerLabel>\n                    석식\n                </DinnerLabel>\n                {menu.dinner.menus.map((menuText, i) => {\n                    return <Menu key={i}>{menuText}</Menu>\n                })}\n            </Column>\n        </InnerContainer>\n    </Container>\n}\n\nexport default Presenter","import WhiteCell from './presenter'\nexport default WhiteCell","import React from 'react'\nimport styled from 'styled-components'\nimport GrayCell from './GrayCell'\nimport WhiteCell from './WhiteCell'\nimport { IMenu } from '../../../../types'\n\ninterface IProps {\n    offdays: number\n    menuObjects: IMenu[]\n    onClickCell: (id: string) => void\n}\n\nconst Container = styled.div`\n    width: 1165px;\n    display:flex;\n    flex-wrap:wrap;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    offdays,\n    menuObjects,\n    onClickCell\n}) => {\n    const grayCells = []\n\n    for (let index = 0; index < offdays; index++) {\n        grayCells.push(<GrayCell key={index} />)\n    }\n\n\n    return <Container>\n        {grayCells}\n        {menuObjects.map(menu => {\n\n            return <WhiteCell\n                onClickCell={onClickCell}\n                menu={menu}\n                key={menu._id} />\n        })}\n    </Container>\n}\n\nexport default Presenter","import CellContainer from './presenter'\nexport default CellContainer","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n    year: number\n    month: number\n    day: number\n    xbuttonClicked: () => void\n}\n\nconst Container = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    position: relative;   \n    height: 70px;\n    width:100%;\n`\nconst Text = styled.div`\n    font-size:20px;\n`\n\nconst XButtonContainer = styled.div`\n    position: absolute;\n    right:0;\n    padding: 20px;\n`\n\nconst XButton = styled.i``\n\nconst Presenter: React.FC<IProps> = ({\n    year,\n    month,\n    day,\n    xbuttonClicked\n}) => {\n    return <Container>\n        <Text>{year}년 {month + 1}월 {day}일</Text>\n        <XButtonContainer onClick={xbuttonClicked}>\n            <XButton className={'fas fa-times'} />\n        </XButtonContainer>\n    </Container>\n}\n\nexport default Presenter","import FormHeader from './presenter'\nexport default FormHeader","import React from 'react'\nimport styled from 'styled-components'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n        },\n        dense: {\n            marginTop: theme.spacing(2),\n        },\n        menu: {\n            width: 200,\n        },\n    }),\n);\n\n\n\n\ninterface IProps {\n    addNewMenu: (event: React.KeyboardEvent<HTMLDivElement>, name: string) => void\n    newLunch: string\n    newDinner: string\n    handleNewMenuInput: (event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst Container = styled.div`\n    display:flex;\n`\n\n\nconst Presenter: React.FC<IProps> = ({\n    addNewMenu,\n    newLunch,\n    newDinner,\n    handleNewMenuInput\n}) => {\n    const classes = useStyles();\n    return <Container>\n        <TextField\n            id=\"outlined-name\"\n            label=\"중식\"\n            className={classes.textField}\n            value={newLunch}\n            onChange={handleNewMenuInput}\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"newLunch\"\n            onKeyPress={e => {\n                addNewMenu(e, 'newLunch')\n            }}\n        />\n        <TextField\n            id=\"outlined-name\"\n            label=\"석식\"\n            className={classes.textField}\n            value={newDinner}\n            onChange={handleNewMenuInput}\n            margin=\"normal\"\n            variant=\"outlined\"\n            name={'newDinner'}\n            onKeyPress={e => {\n                addNewMenu(e, 'newDinner')\n            }}\n        />\n    </Container>\n}\n\nexport default Presenter","import Form from './presenter'\nexport default Form","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@material-ui/core'\n\ninterface IProps {\n    menus: string[]\n    deleteMenu: (name: string, index: number) => void\n    name: string\n}\n\nconst Container = styled.div`\n    width:50%;\n    display:flex;\n    flex-direction:column;\n`\n\nconst ButtonContainer = styled.div`\n    display:flex;\n    align-items:center;\n    margin-bottom:15px;\n`\n\nconst XButton = styled.i`\n    color:black;\n    margin-left:20px;\n    opacity:0;\n    padding:7px;\n    cursor:pointer;\n    ${ButtonContainer}:hover &{\n        opacity:1;\n    }\n`\n\n\nconst Presenter: React.FC<IProps> = ({\n    menus,\n    deleteMenu,\n    name\n}) => {\n    return <Container>\n        {menus.map((menu, i) => <ButtonContainer>\n            <Button key={i} variant=\"contained\" color=\"primary\">\n                {menu}\n            </Button>\n            <XButton onClick={() => deleteMenu(name, i)} className={'fas fa-times'} />\n        </ButtonContainer>)}\n    </Container>\n}\n\nexport default Presenter","import List from './presenter'\nexport default List","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@material-ui/core'\n\ninterface IProps {\n    text: string\n    name: string\n    deleteMenu: (name: string, index: number) => void\n    index: number\n}\n\nconst Container = styled.div`\n    display:flex;\n    align-items:center;\n    margin-bottom:15px;\n`\n\nconst XButton = styled.i`\n    color:black;\n    margin-left:20px;\n    opacity:0;\n    padding:7px;\n    cursor:pointer;\n    ${Container}:hover & {\n        opacity:1;\n    }\n`\n\n\nconst Presenter: React.FC<IProps> = ({\n    text,\n    name,\n    deleteMenu,\n    index\n}) => {\n    return <Container>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n        >\n            {text}\n        </Button>\n        <XButton\n            className={'fas fa-times'}\n            onClick={() => deleteMenu(name, index)}\n        />\n    </Container>\n}\n\nexport default Presenter","import List from './presenter'\nexport default List","import React from 'react'\nimport styled from 'styled-components'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport List from './List';\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n        },\n        dense: {\n            marginTop: theme.spacing(2),\n        },\n        menu: {\n            width: 200,\n        },\n    }),\n);\n\ninterface IProps {\n    addNewMenu: (event: React.KeyboardEvent<HTMLDivElement>, name: string) => void\n    newDaily: string\n    handleNewMenuInput: (event: React.ChangeEvent<HTMLInputElement>) => void\n    dailyMenus: string[]\n    deleteMenu: (name: string, index: number) => void\n}\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n`\n\nconst ListContainer = styled.div`\n    width:100%;\n    display:flex;\n    flex-direction:column;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    addNewMenu,\n    newDaily,\n    handleNewMenuInput,\n    dailyMenus,\n    deleteMenu\n}) => {\n    const classes = useStyles()\n    return <Container>\n        <TextField\n            id=\"outlined-name\"\n            label=\"데일리\"\n            className={classes.textField}\n            value={newDaily}\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"newDaily\"\n            fullWidth={false}\n            onKeyPress={e => {\n                addNewMenu(e, 'newDaily')\n            }}\n            onChange={handleNewMenuInput}\n        />\n        <ListContainer>\n            {dailyMenus.map((daily, i) => {\n                return <List\n                    text={daily}\n                    key={i}\n                    name={'daily'}\n                    index={i}\n                    deleteMenu={deleteMenu}\n                />\n            })}\n        </ListContainer>\n\n    </Container>\n}\n\nexport default Presenter","import DailyMenuForm from './presenter'\nexport default DailyMenuForm","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@material-ui/core'\n\ninterface IProps {\n    text: string\n    name: string\n    deleteMenu: (name: string, index: number) => void\n    index: number\n}\n\nconst Container = styled.div`\n    display:flex;\n    align-items:center;\n    margin-bottom:15px;\n`\n\nconst XButton = styled.i`\n    color:black;\n    margin-left:20px;\n    opacity:0;\n    padding:7px;\n    cursor:pointer;\n    ${Container}:hover & {\n        opacity:1;\n    }\n`\n\nconst Presenter: React.FC<IProps> = ({\n    text,\n    name,\n    deleteMenu,\n    index\n}) => {\n    return <Container>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n        >\n            {text}\n        </Button>\n        <XButton\n            className={'fas fa-times'}\n            onClick={() => deleteMenu(name, index)}\n        />\n    </Container>\n}\n\nexport default Presenter","import List from './presenter'\nexport default List","import React from 'react'\nimport styled from 'styled-components'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport List from './List';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n        },\n        dense: {\n            marginTop: theme.spacing(2),\n        },\n        menu: {\n            width: 200,\n        },\n    }),\n);\n\ninterface IProps {\n    addNewMenu: (event: React.KeyboardEvent<HTMLDivElement>, name: string) => void\n    newFix: string\n    handleNewMenuInput: (event: React.ChangeEvent<HTMLInputElement>) => void\n    fixMenus: string[]\n    deleteMenu: (name: string, index: number) => void\n}\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n`\n\nconst ListContainer = styled.div`\n    width:100%;\n    display:flex;\n    flex-direction:column;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    addNewMenu,\n    newFix,\n    handleNewMenuInput,\n    fixMenus,\n    deleteMenu\n}) => {\n    const classes = useStyles()\n    return <Container>\n        <TextField\n            id=\"outlined-name\"\n            label=\"고정메뉴\"\n            className={classes.textField}\n            value={newFix}\n            margin=\"normal\"\n            variant=\"outlined\"\n            name=\"newFix\"\n            fullWidth={false}\n            onKeyPress={e => {\n                addNewMenu(e, 'newFix')\n            }}\n            onChange={handleNewMenuInput}\n        />\n        <ListContainer>\n            {fixMenus.map((menu, i) => {\n                return <List\n                    text={menu}\n                    key={i}\n                    name={'fix'}\n                    deleteMenu={deleteMenu}\n                    index={i}\n                />\n            })}\n        </ListContainer>\n    </Container>\n}\n\nexport default Presenter","import FixMenuForm from './presenter'\nexport default FixMenuForm","import React from 'react'\nimport styled from 'styled-components'\nimport { IMenu } from '../../../../../types'\nimport Form from './Form'\nimport List from './List'\nimport DailyMenuForm from './DailyMenuFormContainer'\nimport FixMenuForm from './FixMenuForm'\nimport TextField from '@material-ui/core/TextField';\nimport './styles.css'\n\ninterface IProps {\n    menu: IMenu\n    addNewMenu: (event: React.KeyboardEvent<HTMLDivElement>, name: string) => void\n    newLunch: string\n    newDinner: string\n    handleNewMenuInput: (event: React.ChangeEvent<HTMLInputElement>) => void\n    deleteMenu: (name: string, index: number) => void\n    newDaily: string\n    newFix: string\n    handlePrice: (event: React.ChangeEvent<HTMLInputElement>) => void\n    dailyPrice: number\n    fixPrice: number\n    dailyPriceInputEnterPressed: (event: React.KeyboardEvent<HTMLInputElement>) => void\n    dailyPriceXButtonTapped: (index: number) => void\n    fixPriceInputEnterPressed: (event: React.KeyboardEvent<HTMLInputElement>) => void\n    fixPriceXButtonTapped: (index: number) => void\n}\n\nconst Container = styled.div`\n    width:80%;\n    display:flex;\n    flex-direction:column;\n`\n\nconst ListContainer = styled.div`\n    display:flex;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    menu,\n    addNewMenu,\n    newLunch,\n    newDinner,\n    handleNewMenuInput,\n    deleteMenu,\n    newDaily,\n    newFix,\n    handlePrice,\n    dailyPrice,\n    fixPrice,\n    dailyPriceInputEnterPressed,\n    dailyPriceXButtonTapped,\n    fixPriceInputEnterPressed,\n    fixPriceXButtonTapped\n}) => {\n    return <Container>\n        <Form\n            addNewMenu={addNewMenu}\n            newLunch={newLunch}\n            newDinner={newDinner}\n            handleNewMenuInput={handleNewMenuInput}\n        />\n        <div className=\"lunchPriceAndDinnerPriceContainer\">\n            <TextField onChange={handlePrice} name=\"lunchPrice\" label=\"중식가격\" type=\"number\" value={menu.lunchPrice} />\n            <TextField onChange={handlePrice} name=\"dinnerPrice\" label=\"석식가격\" type=\"number\" value={menu.dinnerPrice} />\n        </div>\n        <ListContainer>\n            <List\n                menus={menu.lunch.menus}\n                deleteMenu={deleteMenu}\n                name={'lunch'}\n            />\n            <List menus={menu.dinner.menus}\n                deleteMenu={deleteMenu}\n                name={'dinner'}\n            />\n        </ListContainer>\n        <ListContainer>\n            <DailyMenuForm\n                addNewMenu={addNewMenu}\n                newDaily={newDaily}\n                handleNewMenuInput={handleNewMenuInput}\n                dailyMenus={menu.daily.menus}\n                deleteMenu={deleteMenu}\n            />\n            <FixMenuForm\n                addNewMenu={addNewMenu}\n                newFix={newFix}\n                fixMenus={menu.fix.menus}\n                deleteMenu={deleteMenu}\n                handleNewMenuInput={handleNewMenuInput}\n            />\n        </ListContainer>\n        <div className=\"dailyAndFixPricesContainer\">\n            <TextField type=\"number\" onKeyDown={dailyPriceInputEnterPressed} onChange={handleNewMenuInput} name=\"dailyPrice\" label=\"데일리 가격\" value={dailyPrice} />\n            <TextField type=\"number\" onKeyDown={fixPriceInputEnterPressed} onChange={handleNewMenuInput} name=\"fixPrice\" label=\"고정메뉴 가격\" value={fixPrice} />\n        </div>\n        <div className=\"dailyAndFixPriceArrayContainer\">\n            <div className=\"dailyPricesContainer\">\n                {menu.dailyPrices.map((price, index) => {\n                    return <div className={\"price_container\"} key={index}>\n                        <div className=\"price\">{price}</div>\n                        <div className=\"x\" onClick={() => {\n                            dailyPriceXButtonTapped(index)\n                        }}>x</div>\n                    </div>\n                })}\n            </div>\n            <div className=\"fixPricesContainer\">\n                {menu.fixPrices.map((price, index) => {\n                    return <div className=\"price_container\" key={index}>\n                        <div className=\"price\">{price}</div>\n                        <div onClick={() => {\n                            fixPriceXButtonTapped(index)\n                        }} className=\"x\">x</div>\n                    </div>\n                })}\n            </div>\n        </div>\n    </Container>\n}\n\nexport default Presenter","import FormBody from './presenter'\nexport default FormBody","import React from 'react'\nimport styled from 'styled-components'\nimport { IMenu } from '../../../../types'\nimport FormHeader from './Header'\nimport FormBody from './Body'\nimport { Button } from '@material-ui/core'\n\ninterface IProps {\n    selectedCell: IMenu\n    xbuttonClicked: () => void\n    addNewMenu: (event: React.KeyboardEvent<HTMLDivElement>, name: string) => void\n    newLunch: string\n    newDinner: string\n    handleNewMenuInput: (event: React.ChangeEvent<HTMLInputElement>) => void\n    deleteMenu: (name: string, index: number) => void\n    submitButtonClicked: () => void\n    newDaily: string\n    newFix: string\n    handlePrice: (event: React.ChangeEvent<HTMLInputElement>) => void\n    dailyPrice: number\n    fixPrice: number\n    dailyPriceInputEnterPressed: (event: React.KeyboardEvent<HTMLInputElement>) => void\n    dailyPriceXButtonTapped: (index: number) => void\n    fixPriceInputEnterPressed: (event: React.KeyboardEvent<HTMLInputElement>) => void\n    fixPriceXButtonTapped: (index: number) => void\n}\n\nconst Container = styled.div`\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(225, 225, 225, 0.5);\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    flex-direction:column;\n`\n\nconst Card = styled.div`\n    width:500px;\n    height:650px;\n    background:white;\n    border-radius:7px;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    position: relative;\n    overflow-y:scroll;\n    padding-top:20px;\n    padding-bottom:20px;\n`\n\nconst SubmitButtonContainer = styled.div`\n    margin-top:20px;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    selectedCell,\n    xbuttonClicked,\n    addNewMenu,\n    newLunch,\n    newDinner,\n    handleNewMenuInput,\n    deleteMenu,\n    submitButtonClicked,\n    newDaily,\n    newFix,\n    handlePrice,\n    dailyPrice,\n    fixPrice,\n    dailyPriceInputEnterPressed,\n    dailyPriceXButtonTapped,\n    fixPriceInputEnterPressed,\n    fixPriceXButtonTapped\n}) => {\n    return <Container>\n        <Card>\n            <FormHeader\n                year={selectedCell.year}\n                month={selectedCell.month}\n                day={selectedCell.day}\n                xbuttonClicked={xbuttonClicked}\n            />\n            <FormBody\n                addNewMenu={addNewMenu}\n                menu={selectedCell}\n                newLunch={newLunch}\n                newDinner={newDinner}\n                handleNewMenuInput={handleNewMenuInput}\n                deleteMenu={deleteMenu}\n                newDaily={newDaily}\n                newFix={newFix}\n                handlePrice={handlePrice}\n                dailyPrice={dailyPrice}\n                fixPrice={fixPrice}\n                dailyPriceInputEnterPressed={dailyPriceInputEnterPressed}\n                dailyPriceXButtonTapped={dailyPriceXButtonTapped}\n                fixPriceInputEnterPressed={fixPriceInputEnterPressed}\n                fixPriceXButtonTapped={fixPriceXButtonTapped}\n            />\n            <SubmitButtonContainer>\n                <Button\n                    onClick={submitButtonClicked}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                >\n                    제출하기\n            </Button>\n            </SubmitButtonContainer>\n        </Card>\n    </Container>\n}\n\nexport default Presenter","import Form from './presenter'\nexport default Form","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\ninterface IHomeIcon {\n    background: string\n}\n\ninterface IProps {\n    background: string\n}\n\nconst Container = styled.div``\n\nconst HomeICon = styled.i`\n    font-size:40px;\n    color:${(props: IHomeIcon) => props.background};\n`\n\nconst Presenter: React.FC<IProps> = ({\n    background\n}) => {\n    return <Container>\n        <Link\n            to={'/'}\n        >\n            <HomeICon\n                background={background}\n                className={'fas fa-home'}\n            />\n        </Link>\n    </Container>\n}\n\nexport default Presenter","import GlobalNavigationBar from './container'\nexport default GlobalNavigationBar","import React from 'react'\nimport Presenter from './presenter'\n\ninterface IProps {\n    background: string\n}\n\nclass Container extends React.Component<IProps> {\n    render() {\n        const {\n            background\n        } = this.props;\n        return <Presenter\n            background={background}\n        />\n    }\n}\n\nexport default Container","import React from 'react'\nimport styled from 'styled-components'\nimport Navigation from './Navigation'\nimport CalendarHeader from './Header'\nimport CellContainer from './CellContainer'\nimport { IMenu } from '../../../types'\nimport Form from './Form'\nimport GlobalNavigationBar from '../../global/GlobalNavigation'\n\ninterface IProps {\n    year: number\n    month: number\n    offdays: number\n    menuObjects: IMenu[]\n    onClickCell: (id: string) => void\n    form: boolean\n    selectedCell: IMenu\n    loading: boolean\n    xbuttonClicked: () => void\n    addNewMenu: (event: React.KeyboardEvent<HTMLDivElement>, name: string) => void\n    newLunch: string\n    newDinner: string\n    handleNewMenuInput: (event: React.ChangeEvent<HTMLInputElement>) => void\n    deleteMenu: (name: string, index: number) => void\n    submitButtonClicked: () => void\n    rightArrowClicked: () => void\n    leftArrowClicked: () => void\n    newDaily: string\n    newFix: string\n    handlePrice: (event: React.ChangeEvent<HTMLInputElement>) => void\n    dailyPrice: number\n    fixPrice: number\n    dailyPriceInputEnterPressed: (event: React.KeyboardEvent<HTMLInputElement>) => void\n    dailyPriceXButtonTapped: (index: number) => void\n    fixPriceInputEnterPressed: (event: React.KeyboardEvent<HTMLInputElement>) => void\n    fixPriceXButtonTapped: (index: number) => void\n}\n\nconst Container = styled.div`\n    width:100%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    padding-top:29px;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    year,\n    month,\n    offdays,\n    menuObjects,\n    onClickCell,\n    form,\n    selectedCell,\n    loading,\n    xbuttonClicked,\n    addNewMenu,\n    newDinner,\n    newLunch,\n    handleNewMenuInput,\n    deleteMenu,\n    submitButtonClicked,\n    rightArrowClicked,\n    leftArrowClicked,\n    newDaily,\n    newFix,\n    handlePrice,\n    dailyPrice,\n    fixPrice,\n    dailyPriceInputEnterPressed,\n    dailyPriceXButtonTapped,\n    fixPriceInputEnterPressed,\n    fixPriceXButtonTapped\n}) => {\n\n    return <Container>\n        <GlobalNavigationBar\n            background={'#273c75'}\n        />\n        <Navigation\n            year={year}\n            month={month}\n            rightArrowClicked={rightArrowClicked}\n            leftArrowClicked={leftArrowClicked}\n        />\n        <CalendarHeader\n        />\n        {loading === false && <CellContainer\n            offdays={offdays}\n            menuObjects={menuObjects}\n            onClickCell={onClickCell}\n        />}\n\n        {form && <Form\n            selectedCell={selectedCell}\n            xbuttonClicked={xbuttonClicked}\n            addNewMenu={addNewMenu}\n            newDinner={newDinner}\n            newLunch={newLunch}\n            handleNewMenuInput={handleNewMenuInput}\n            deleteMenu={deleteMenu}\n            submitButtonClicked={submitButtonClicked}\n            newDaily={newDaily}\n            newFix={newFix}\n            handlePrice={handlePrice}\n            dailyPrice={dailyPrice}\n            fixPrice={fixPrice}\n            dailyPriceInputEnterPressed={dailyPriceInputEnterPressed}\n            dailyPriceXButtonTapped={dailyPriceXButtonTapped}\n            fixPriceInputEnterPressed={fixPriceInputEnterPressed}\n            fixPriceXButtonTapped={fixPriceXButtonTapped}\n        />}\n    </Container>\n}\n\nexport default Presenter;","import React from 'react'\nimport Presenter from './presenter'\nimport { IMenu, IState, ILunch } from '../../../types'\nimport { connect } from 'react-redux'\nimport { fetchMenus, putNewMenu } from '../../../actions/menu'\n\ninterface IStateTypes {\n    year: number\n    month: number\n    days: number\n    offdays: number\n    form: boolean\n    selectedCell: IMenu\n    newLunch: string\n    newDinner: string\n    newFix: string\n    newDaily: string\n    dailyPrice: number\n    fixPrice: number\n}\n\ninterface IProps {\n    fetchMenus: (year: number, month: number) => void\n    menus: IMenu[]\n    loading: boolean\n    putNewMenu: (menu: IMenu) => void\n}\n\nclass Container extends React.Component<IProps, IStateTypes> {\n    state: IStateTypes = {\n        year: new Date().getFullYear(),\n        month: new Date().getMonth(),\n        days: 0,\n        offdays: 0,\n        form: false,\n        selectedCell: {\n            _id: \"\",\n            day: 0,\n            year: 0,\n            month: 0,\n            dinner: {\n                _id: \"\",\n                menus: []\n            },\n            dinnerPrice: 3000,\n            lunch: {\n                _id: \"\",\n                menus: []\n            },\n            lunchPrice: 3000,\n            fix: {\n                _id: \"\",\n                menus: []\n            },\n            fixPrices: [],\n            daily: {\n                _id: \"\",\n                menus: []\n            },\n            dailyPrices: []\n        },\n        newLunch: \"\",\n        newDinner: \"\",\n        newDaily: \"\",\n        newFix: \"\",\n        dailyPrice: 0,\n        fixPrice: 0\n    }\n\n    componentDidMount() {\n        const {\n            year,\n            month,\n        } = this.state\n\n        this.setDaysAndOffDays(year, month)\n    }\n\n    render() {\n        const {\n            year,\n            month,\n            offdays,\n            form,\n            selectedCell,\n            newLunch,\n            newDinner,\n            newDaily,\n            newFix,\n            dailyPrice,\n            fixPrice\n        } = this.state\n        const {\n            onClickCell,\n            xbuttonClicked,\n            addNewMenu,\n            handleNewMenuInput,\n            deleteMenu,\n            submitButtonClicked,\n            rightArrowClicked,\n            leftArrowClicked\n        } = this;\n        const {\n            menus,\n            loading\n        } = this.props;\n        return <Presenter\n            year={year}\n            month={month}\n            offdays={offdays}\n            menuObjects={menus}\n            onClickCell={onClickCell}\n            form={form}\n            selectedCell={selectedCell}\n            loading={loading}\n            xbuttonClicked={xbuttonClicked}\n            addNewMenu={addNewMenu}\n            newLunch={newLunch}\n            newDinner={newDinner}\n            handleNewMenuInput={handleNewMenuInput}\n            deleteMenu={deleteMenu}\n            submitButtonClicked={submitButtonClicked}\n            rightArrowClicked={rightArrowClicked}\n            leftArrowClicked={leftArrowClicked}\n            newDaily={newDaily}\n            newFix={newFix}\n            handlePrice={this.handlePrice}\n            dailyPrice={dailyPrice}\n            fixPrice={fixPrice}\n            dailyPriceInputEnterPressed={this.dailyPriceInputEnterPressed}\n            dailyPriceXButtonTapped={this.dailyPriceXButtonTapped}\n            fixPriceInputEnterPressed={this.fixPriceInputEnterPressed}\n            fixPriceXButtonTapped={this.fixPriceXButtonTapped}\n        />\n    }\n\n    fixPriceXButtonTapped = (index: number) => {\n        const updatedFixPrices = this.state.selectedCell.fixPrices.filter((price, index2) => {\n            if (index == index2) {\n                return false\n            } else {\n                return true\n            }\n        })\n        this.setState({\n            ...this.state,\n            selectedCell: {\n                ...this.state.selectedCell,\n                fixPrices: updatedFixPrices\n            }\n        })\n    }\n\n    dailyPriceXButtonTapped = (index: number) => {\n        const updatedDailyPrices = this.state.selectedCell.dailyPrices.filter((price, index2) => {\n            if (index == index2) {\n                return false\n            } else {\n                return true\n            }\n        })\n        this.setState({\n            ...this.state,\n            selectedCell: {\n                ...this.state.selectedCell,\n                dailyPrices: updatedDailyPrices\n            }\n        })\n    }\n\n    fixPriceInputEnterPressed = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        const key = event.key\n        if (key === 'Enter') {\n            this.setState({\n                ...this.state,\n                selectedCell: {\n                    ...this.state.selectedCell,\n                    fixPrices: [\n                        ...this.state.selectedCell.fixPrices,\n                        this.state.fixPrice\n                    ]\n                },\n                fixPrice: 0\n            })\n        }\n    }\n\n    dailyPriceInputEnterPressed = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        const key = event.key\n        if (key === 'Enter') {\n            this.setState({\n                ...this.state,\n                selectedCell: {\n                    ...this.state.selectedCell,\n                    dailyPrices: [\n                        ...this.state.selectedCell.dailyPrices,\n                        this.state.dailyPrice\n                    ]\n                },\n                dailyPrice: 0\n            })\n        }\n    }\n\n    submitButtonClicked = () => {\n        const menuObject: IMenu = this.state.selectedCell\n        const updatedSelectedCell: IMenu = {\n            _id: \"\",\n            day: 0,\n            year: 0,\n            month: 0,\n            dinner: {\n                _id: \"\",\n                menus: []\n            },\n            dinnerPrice: 0,\n            lunch: {\n                _id: \"\",\n                menus: []\n            },\n            lunchPrice: 0,\n            fix: {\n                _id: \"\",\n                menus: []\n            },\n            fixPrices: [],\n            daily: {\n                _id: \"\",\n                menus: []\n            },\n            dailyPrices: []\n        }\n\n        console.log(\"menu: \", menuObject)\n\n\n        this.props.putNewMenu(menuObject)\n\n\n\n        this.setState({\n            form: false,\n            selectedCell: updatedSelectedCell\n        })\n    }\n\n    handlePrice = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const name = event.target.name\n        const value = event.target.value\n        this.setState({\n            ...this.state,\n            selectedCell: {\n                ...this.state.selectedCell,\n                [name]: value\n            }\n        })\n    }\n\n    handleNewMenuInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const name: string = event.target.name\n        const value: string = event.target.value\n        this.setState({\n            ...this.state,\n            [name]: value\n        })\n    }\n\n    deleteMenu = (name: string, index: number): void => {\n        if (name === 'lunch') {\n            const currentLunchs = this.state.selectedCell.lunch.menus\n            const updatedLunchs: string[] = currentLunchs.filter((menu, i) => {\n                if (i === index) {\n                    return false\n                } else {\n                    return true\n                }\n            })\n            const updatedSelectedCell: IMenu = {\n                ...this.state.selectedCell,\n                lunch: {\n                    ...this.state.selectedCell.lunch,\n                    menus: updatedLunchs\n                }\n            }\n            this.setState({\n                selectedCell: updatedSelectedCell\n            })\n\n        } else if (name === 'dinner') {\n            const currentDinners = this.state.selectedCell.dinner.menus\n            const updatedDinners: string[] = currentDinners.filter((menu, i) => {\n                if (i === index) {\n                    return false\n                } else {\n                    return true\n                }\n            })\n            const updatedSelectedCell: IMenu = {\n                ...this.state.selectedCell,\n                dinner: {\n                    ...this.state.selectedCell.dinner,\n                    menus: updatedDinners\n                }\n            }\n            this.setState({\n                selectedCell: updatedSelectedCell\n            })\n        } else if (name === 'fix') {\n            const currentFixs = this.state.selectedCell.fix.menus\n            const updatedFixs: string[] = currentFixs.filter((menu, i) => {\n                if (i === index) {\n                    return false\n                } else {\n                    return true\n                }\n            })\n            const updatedSelectedCell: IMenu = {\n                ...this.state.selectedCell,\n                fix: {\n                    ...this.state.selectedCell.fix,\n                    menus: updatedFixs\n                }\n            }\n            this.setState({\n                selectedCell: updatedSelectedCell\n            })\n        } else if (name === 'daily') {\n            const currentDaily = this.state.selectedCell.daily.menus\n            const updatedDaily: string[] = currentDaily.filter((menu, i) => {\n                if (i === index) {\n                    return false\n                } else {\n                    return true\n                }\n            })\n            const updatedSelectedCell: IMenu = {\n                ...this.state.selectedCell,\n                daily: {\n                    ...this.state.selectedCell.daily,\n                    menus: updatedDaily\n                }\n            }\n            this.setState({\n                selectedCell: updatedSelectedCell\n            })\n        }\n    }\n\n    addNewMenu = (event: React.KeyboardEvent<HTMLDivElement>, name: string): void => {\n        const key = event.key\n        const { selectedCell } = this.state\n\n        if (key === 'Enter') {\n            // 새로운 메뉴 추가\n\n            const newLunch = this.state.newLunch\n            const newDinner = this.state.newDinner\n            const newFix = this.state.newFix\n            const newDaily = this.state.newDaily\n\n            this.setState({\n                newLunch: \"\",\n                newDinner: \"\",\n                newDaily: \"\",\n                newFix: \"\"\n            })\n\n\n            if (name === 'newLunch') {\n                const updatedMenu: IMenu = {\n                    ...selectedCell,\n                    lunch: {\n                        _id: selectedCell.lunch._id,\n                        menus: [\n                            ...selectedCell.lunch.menus,\n                            newLunch\n                        ]\n                    }\n                }\n\n                this.setState({\n                    selectedCell: updatedMenu\n                })\n            } else if (name === 'newDinner') {\n                const updatedMenu: IMenu = {\n                    ...selectedCell,\n                    dinner: {\n                        _id: selectedCell.dinner._id,\n                        menus: [\n                            ...selectedCell.dinner.menus,\n                            newDinner\n                        ]\n                    }\n                }\n                this.setState({\n                    selectedCell: updatedMenu\n                })\n            } else if (name === 'newFix') {\n                const updatedMenu: IMenu = {\n                    ...selectedCell,\n                    fix: {\n                        ...selectedCell.fix,\n                        menus: [\n                            ...selectedCell.fix.menus,\n                            newFix\n                        ]\n                    }\n                }\n                this.setState({\n                    selectedCell: updatedMenu\n                })\n            } else if (name === 'newDaily') {\n                const updatedMenu: IMenu = {\n                    ...selectedCell,\n                    daily: {\n                        ...selectedCell.daily,\n                        menus: [\n                            ...selectedCell.daily.menus,\n                            newDaily\n                        ]\n                    }\n                }\n                this.setState({\n                    selectedCell: updatedMenu\n                })\n            }\n\n\n\n        }\n    }\n\n    xbuttonClicked = (): void => {\n        this.setState({\n            ...this.state,\n            form: false,\n            selectedCell: {\n                _id: \"\",\n                day: 0,\n                year: 0,\n                month: 0,\n                dinner: {\n                    _id: \"\",\n                    menus: []\n                },\n                dinnerPrice: 0,\n                lunch: {\n                    _id: \"\",\n                    menus: []\n                },\n                lunchPrice: 0,\n                fix: {\n                    _id: \"\",\n                    menus: []\n                },\n                fixPrices: [],\n                daily: {\n                    _id: \"\",\n                    menus: []\n                },\n                dailyPrices: [],\n            },\n            newDaily: \"\",\n            newDinner: \"\",\n            newFix: \"\",\n            newLunch: \"\",\n            dailyPrice: 0,\n            fixPrice: 0\n        })\n    }\n\n    onClickCell = (id: string): void => {\n\n        const clickedCells: IMenu[] = this.props.menus.filter(menu => {\n            if (menu._id === id) {\n                return true\n            } else {\n                return false\n            }\n        })\n        const clickedCell: IMenu = clickedCells[0]\n\n        console.log(\"clicked cell: \", clickedCell)\n\n        this.setState({\n            selectedCell: clickedCell,\n            form: true\n        })\n    }\n\n    leftArrowClicked = () => {\n        let { year, month } = this.state\n        if (month === 0) {\n            year = year - 1\n            month = 11\n            this.setState({\n                year,\n                month\n            })\n            this.setDaysAndOffDays(year, month)\n        } else {\n            month = month - 1\n            this.setState({\n                month\n            })\n            this.setDaysAndOffDays(year, month)\n        }\n    }\n\n    rightArrowClicked = () => {\n        const { year, month } = this.state\n        if (month === 11) {\n            this.setState({\n                month: 0,\n                year: year + 1\n            })\n            this.setDaysAndOffDays(year + 1, 0)\n        } else {\n            this.setState({\n                month: month + 1,\n            })\n            this.setDaysAndOffDays(year, month + 1)\n        }\n\n    }\n\n\n    setMenuObjects = (year: number, month: number) => {\n        this.props.fetchMenus(year, month)\n    }\n\n    setDaysAndOffDays = (year: number, month: number): void => {\n\n        // 이번달의 첫날이 무슨 요일인지 구한다.\n        const week = ['일', '월', '화', '수', '목', '금', '토']\n        const dayOfWeek = week[new Date(year, month, 1).getDay()];\n        const offdays = this.getOffDays(dayOfWeek)\n\n        // 해당 년과 월에 몇일까지 있는지 계산\n        const days = 32 - new Date(year, month, 32).getDate()\n        console.log(`${year}년 ${month + 1}월에는 ${days} 만큼의 일이 있습니다. `)\n\n        this.setState({\n            days,\n            offdays\n        })\n\n        this.setMenuObjects(year, month)\n\n    }\n\n    getOffDays = (dayOfWeek: string): number => {\n        let offdays = 0\n\n        switch (dayOfWeek) {\n            case '일':\n                offdays = 0\n                break;\n            case '월':\n                offdays = 1\n                break;\n            case '화':\n                offdays = 2\n                break;\n            case '수':\n                offdays = 3\n                break;\n            case '목':\n                offdays = 4\n                break;\n            case '금':\n                offdays = 5\n                break;\n            case '토':\n                offdays = 6\n                break;\n\n            default:\n                break;\n        }\n\n        return offdays\n    }\n}\n\nconst mapStateToProps = (state: IState) => {\n    return {\n        menus: state.menu.menus,\n        loading: state.menu.loading\n    }\n}\n\nexport default connect(mapStateToProps, {\n    fetchMenus,\n    putNewMenu\n})(Container)","import PostMenu from './container'\nexport default PostMenu","import React from 'react'\nimport styled from 'styled-components'\nimport DatePicker from 'react-datepicker'\n\n\ninterface IProps {\n    handleFromDateChange: (date: Date) => void\n    fromDate: Date\n}\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\nconst Text = styled.div`\n    margin-bottom: 10px;\n`\n\n\n\nconst Presenter: React.FC<IProps> = ({\n    handleFromDateChange,\n    fromDate\n}) => {\n    return <Container>\n        <Text>\n            FROM\n        </Text>\n        <DatePicker\n            selected={fromDate}\n            onChange={handleFromDateChange}\n        />\n    </Container>\n}\n\nexport default Presenter","import FromPicker from './presenter'\nexport default FromPicker","import React from 'react'\nimport styled from 'styled-components'\nimport DatePicker from 'react-datepicker'\n\ninterface IProps {\n    handleToDateChange: (date: Date) => void\n    toDate: Date\n}\n\nconst Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\nconst Text = styled.div`\n    margin-bottom: 10px;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    handleToDateChange,\n    toDate\n}) => {\n    return <Container>\n        <Text>\n            TO\n        </Text>\n        <DatePicker\n            selected={toDate}\n            onChange={handleToDateChange}\n        />\n    </Container>\n}\n\n\nexport default Presenter","import ToPicker from './presenter'\nexport default ToPicker","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@material-ui/core'\n\ninterface IProps {\n    nextButtonClicked: () => void\n}\n\nconst Container = styled.div``\n\nconst Presenter: React.FC<IProps> = ({\n    nextButtonClicked\n}) => {\n    return <Container>\n        <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"large\"\n            style={{\n                marginTop: 100\n            }}\n            onClick={nextButtonClicked}\n        >\n            결과보러가기\n</Button>\n    </Container>\n}\n\nexport default Presenter","import NextButton from './presenter'\nexport default NextButton","import React from 'react';\nimport styled from 'styled-components'\nimport FromPicker from './FromPicker';\nimport ToPicker from './ToPicker';\nimport NextButton from './Button';\nimport GlobalNavigationBar from '../../../global/GlobalNavigation';\n\ninterface IProps {\n    handleFromDateChange: (date: Date) => void\n    handleToDateChange: (date: Date) => void\n    fromDate: Date\n    toDate: Date\n    nextButtonClicked: () => void\n}\n\nconst Container = styled.div`\n    width:100%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nconst UpperContainer = styled.div`\n    width:100%;\n    height:425px;\n    background:#216ba5;\n    color:white;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    padding-top:50px;\n`\n\nconst LowerContainer = styled.div`\n    width:100%;\n    background:white;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nconst BigText = styled.div`\n    font-size: 34px;\n    font-weight: 600;\n    line-height: 1.2;\n    margin-top: 80px;\n    margin-bottom: 22px;\n`\n\nconst PickerContainer = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Space = styled.div`\n    width:100px;\n`\n\n\nconst Presenter: React.FC<IProps> = ({\n    fromDate,\n    toDate,\n    handleFromDateChange,\n    handleToDateChange,\n    nextButtonClicked\n}) => {\n    // The first commit of Material-UI\n\n    return <Container>\n\n        <UpperContainer>\n            <GlobalNavigationBar\n                background={'white'}\n            />\n            <BigText>\n                PICK DATE\n            </BigText>\n            <PickerContainer>\n                <FromPicker\n                    fromDate={fromDate}\n                    handleFromDateChange={handleFromDateChange}\n                />\n                <Space />\n                <ToPicker\n                    toDate={toDate}\n                    handleToDateChange={handleToDateChange}\n                />\n            </PickerContainer>\n        </UpperContainer>\n        <LowerContainer>\n            <NextButton\n                nextButtonClicked={nextButtonClicked}\n            />\n        </LowerContainer>\n\n\n    </Container>\n}\n\n\nexport default Presenter;","import DatePicker from './presenter'\nexport default DatePicker","import React from 'react'\nimport styled from 'styled-components'\nimport DatePicker from './DatePicker'\n\ninterface IProps {\n    handleFromDateChange: (date: Date) => void\n    handleToDateChange: (date: Date) => void\n    fromDate: Date\n    toDate: Date\n    nextButtonClicked: () => void\n}\n\nconst Container = styled.div`\n    width:100%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    handleFromDateChange,\n    handleToDateChange,\n    fromDate,\n    toDate,\n    nextButtonClicked\n}) => {\n    return <Container>\n        <DatePicker\n            handleFromDateChange={handleFromDateChange}\n            handleToDateChange={handleToDateChange}\n            fromDate={fromDate}\n            toDate={toDate}\n            nextButtonClicked={nextButtonClicked}\n        />\n    </Container>\n}\n\nexport default Presenter","import MenuView from './container'\nexport default MenuView","import React from 'react'\nimport Presenter from './presenter'\n\n\ninterface IState {\n    fromDate: Date\n    toDate: Date\n}\n\nclass Container extends React.Component {\n\n    state: IState = {\n        fromDate: new Date(),\n        toDate: new Date()\n    }\n\n    componentDidMount() {\n        const { toDate } = this.state\n        toDate.setDate(toDate.getDate() + 1)\n        this.setState({\n            toDate\n        })\n    }\n\n\n    render() {\n        const {\n            handleFromDateChange,\n            handleToDateChange,\n            nextButtonClicked\n        } = this\n\n        const {\n            fromDate,\n            toDate\n        } = this.state\n        return <Presenter\n            handleFromDateChange={handleFromDateChange}\n            handleToDateChange={handleToDateChange}\n            fromDate={fromDate}\n            toDate={toDate}\n            nextButtonClicked={nextButtonClicked}\n        />\n    }\n\n    nextButtonClicked = () => {\n        const {\n            fromDate,\n            toDate\n        } = this.state\n\n        const from: number = fromDate.getTime()\n        const to: number = toDate.getTime()\n\n        window.location.href = `/menus/${from}/${to}`\n    }\n\n    handleFromDateChange = (date: Date) => {\n        this.setState({\n            fromDate: date\n        })\n    }\n\n    handleToDateChange = (date: Date) => {\n        this.setState({\n            toDate: date\n        })\n    }\n}\n\nexport default Container","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n    name: string\n}\n\nconst Container = styled.div`\n    display:flex;\n`\n\nconst Text = styled.div`\n    /* background:#273c75;\n    color:white;\n    font-size:11px;\n    padding:2.5px;\n    margin-top:3px;\n    margin-left:3px;\n    font-weight:600;\n    border-radius:4px; */\n    margin-left:7px;\n    margin-bottom:4px;\n    font-weight:600;\n    margin-top:4px;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    name\n}) => {\n    return <Container>\n        <Text>\n            {name}\n        </Text>\n\n    </Container>\n}\n\nexport default Presenter","import Header from './presenter'\nexport default Header","import React from 'react'\nimport styled from 'styled-components'\n\ninterface IProps {\n    text: string\n}\n\nconst Container = styled.div`\n    display:flex;\n    align-items:center;\n    margin-left:8px;\n    margin-top:4px;\n    margin-bottom:4px;\n    padding-left:7px;\n`\nconst Circle = styled.div`\n    width:5px;\n    height:5px;\n    border-radius:50%;\n    background:#273c75;\n    margin-right:4px;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    text\n}) => {\n    return <Container>\n        {/* <Circle /> */}\n        {text}\n    </Container>\n}\n\nexport default Presenter","import Menu from './presenter'\nexport default Menu","import React from 'react'\nimport styled from 'styled-components'\nimport Header from './Header'\nimport Menu from './Menu'\n\ninterface IProps {\n    menus: string[]\n    name: string\n    height: number\n}\n\ninterface IContainer {\n    height: number\n}\n\nconst Container = styled.div`\n    border-bottom:1px solid #dcdde1;\n    height:${(props: IContainer) => `${props.height}px`};\n`\n\nconst Presenter: React.FC<IProps> = ({\n    menus,\n    name,\n    height\n}) => {\n    return <Container\n        height={height}\n    >\n        <Header\n            name={name}\n        />\n        {menus.map((menu, i) => {\n            return <Menu\n                key={i}\n                text={menu}\n            />\n        })}\n    </Container>\n}\n\nexport default Presenter","import MenuBox from './presenter'\nexport default MenuBox","import React from 'react'\nimport styled from 'styled-components'\nimport { getDayNameFromYearMonthDay } from '../../../../../../utils'\n\ninterface IProps {\n    year: number\n    month: number\n    day: number\n}\n\nconst Container = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    padding-top:5px;\n    padding-bottom:5px;\n    border-bottom:1px solid #dcdde1;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    year,\n    month,\n    day\n}) => {\n    const dayOfWeek = getDayNameFromYearMonthDay(year, month, day)\n    return <Container>\n        {month + 1}월 {day}일 {dayOfWeek}\n    </Container>\n}\n\nexport default Presenter;","import CardHeader from './presenter'\nexport default CardHeader","export const getDayNameFromYearMonthDay = (year: number, month: number, day: number): string => {\n    const week = ['일', '월', '화', '수', '목', '금', '토'];\n    const dayOfWeek = week[new Date(year, month, day).getDay()]\n    return dayOfWeek\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { IMenu } from '../../../../../types'\nimport MenuBox from './MenuBox'\nimport CardHeader from './Header'\n\ninterface IProps {\n    menu: IMenu\n}\n\nconst Container = styled.div`\n    background:white;\n    margin-right:15px;\n    margin-left:15px;\n    width:250px;\n    height:600px;\n    border-radius:4px;\n    box-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12);\n`\n\nconst Presenter: React.FC<IProps> = ({\n    menu\n}) => {\n    const {\n        lunch,\n        dinner,\n        fix,\n        day,\n        daily,\n        year,\n        month\n    } = menu\n    return <Container>\n        <CardHeader\n            year={year}\n            month={month}\n            day={day}\n        />\n        <MenuBox\n            menus={lunch.menus}\n            name={'중식'}\n            height={180}\n        />\n        <MenuBox\n            menus={dinner.menus}\n            name={'석식'}\n            height={180}\n        />\n        <MenuBox\n            menus={daily.menus}\n            name={'데일리'}\n            height={100}\n        />\n        <MenuBox\n            menus={fix.menus}\n            name={'고정 메뉴'}\n            height={106}\n        />\n    </Container>\n}\n\nexport default Presenter","import Card from './presenter'\nexport default Card","import React from 'react'\nimport styled from 'styled-components'\nimport { IMenu } from '../../../../types'\nimport Card from './Card'\n\ninterface IProps {\n    menus: IMenu[]\n    loading: boolean\n}\n\nconst Container = styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    menus,\n    loading\n}) => {\n    return <Container>\n        {menus.map(menu => {\n            return <Card\n                key={menu._id}\n                menu={menu}\n            />\n        })}\n    </Container>\n}\n\nexport default Presenter","import MenusContainer from './presenter'\nexport default MenusContainer","import React from 'react'\nimport styled from 'styled-components'\nimport MenusContainer from './MenusContainer'\nimport { IMenu } from '../../../types'\nimport GlobalNavigationBar from '../../global/GlobalNavigation'\n\ninterface IProps {\n    loading: boolean\n    menus: IMenu[]\n}\n\nconst Container = styled.div`\n    width:100%;\n    height:100vh;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    flex-direction:column;\n    background:#f5f5f5;\n    position:relative;\n`\n\nconst NavigationButtonContainer = styled.div`\n    position:absolute;\n    top:20px;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    loading,\n    menus\n}) => {\n    return <Container>\n        <NavigationButtonContainer>\n            <GlobalNavigationBar\n                background={'#273c75'}\n            />\n        </NavigationButtonContainer>\n        <MenusContainer\n            loading={loading}\n            menus={menus}\n        />\n    </Container>\n}\n\nexport default Presenter","import React from 'react'\nimport Presenter from './presenter'\nimport { RouteComponentProps, withRouter } from 'react-router'\nimport { connect } from 'react-redux'\nimport { IState, IMenu } from '../../../types'\nimport { fetchMenuBoards } from '../../../actions/menuBoard'\n\ninterface IUrlParams {\n    date1: string\n    date2: string\n}\n\ninterface IStateProps {\n    date1: string\n    date2: string\n}\n\ninterface IProps {\n    fetchMenuBoards: (date1: string, date2: string) => void\n    loading: boolean\n    menus: IMenu[]\n}\n\nclass Container extends React.Component<RouteComponentProps<IUrlParams> & IProps> {\n\n    state: IStateProps = {\n        date1: \"\",\n        date2: \"\"\n    }\n\n    componentDidMount() {\n        const {\n            date1,\n            date2\n        } = this.props.match.params\n        this.setState({\n            date1,\n            date2\n        })\n\n        this.props.fetchMenuBoards(date1, date2)\n\n    }\n\n    render() {\n        const {\n            loading,\n            menus\n        } = this.props\n        return <Presenter\n            loading={loading}\n            menus={menus}\n        />\n    }\n}\n\nconst mapStateToProps = (state: IState) => {\n    return {\n        loading: state.menuBoard.loading,\n        menus: state.menuBoard.menus\n    }\n}\n\nexport default connect(mapStateToProps, {\n    fetchMenuBoards\n})(withRouter(Container))","import Menus from './container'\nexport default Menus","import { Dispatch } from \"react\";\nimport { IMenu } from \"../types\";\nimport { KBU_CAFETERIA_SERVER } from '../consts'\nimport axios from 'axios'\nimport { FETCH_MENU_BOARDS } from './types'\n\n\ninterface IDispatch {\n    type: string\n    menus: IMenu[]\n}\n\ninterface IfetchMenuBoardsResponse {\n    ok: boolean\n    error: string\n    menus: IMenu[]\n}\n\nexport const fetchMenuBoards = (date1: string, date2: string) => (dispatch: Dispatch<IDispatch>) => {\n    axios.get(`${KBU_CAFETERIA_SERVER}menu/menus/${date1}/${date2}`, {\n        headers: {\n            'authentication': localStorage.getItem('tk')\n        }\n    })\n        .then(res => res.data)\n        .then(data => {\n            const {\n                ok,\n                error,\n                menus\n            }: IfetchMenuBoardsResponse = data\n            console.log(`Data from KBU CAFETERIA SERVER: ${data}`)\n            if (ok) {\n                dispatch({\n                    type: FETCH_MENU_BOARDS,\n                    menus\n                })\n                return\n            } else {\n                alert(error)\n                window.location.href = '/'\n                return\n            }\n        })\n        .catch(err => {\n            console.error(err)\n            alert(`메뉴판들을 불러오던 도중에 에러가 발생하였습니다. 관리자에게 문의해주세요. 01090411019`)\n            window.location.href = '/'\n            return\n        })\n}","import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport MainComponent from '../Main';\nimport PostMenu from '../PostMenu';\nimport MenuView from '../MenuView';\nimport Menus from '../Menus';\n\nconst Presenter: React.FC = () => {\n    return <Router>\n        <Switch>\n            <Route path={'/post'}>\n                <PostMenu />\n            </Route>\n            <Route path={'/view'}>\n                <MenuView />\n            </Route>\n            <Route path={'/menus/:date1/:date2'}>\n                <Menus />\n            </Route>\n            <Route>\n                <MainComponent />\n            </Route>\n        </Switch>\n    </Router>\n}\n\nexport default Presenter","import PrivateComponent from './container'\nexport default PrivateComponent","import React from 'react'\nimport Presenter from './presenter'\n\nclass Container extends React.Component {\n    render() {\n        return <Presenter />\n    }\n}\n\nexport default Container","import React from 'react'\nimport styled from 'styled-components'\nimport { TextField, Button } from '@material-ui/core'\n\ninterface IProps {\n    email: string\n    password: string\n    handleInput: (e: React.ChangeEvent<HTMLInputElement>) => void\n    loginButtonClicked: () => void\n}\n\nconst Container = styled.div`\n    width:500px;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    email,\n    password,\n    handleInput,\n    loginButtonClicked\n}) => {\n    return <Container>\n        <TextField\n            onChange={handleInput}\n            value={email}\n            name={'email'}\n            style={{\n                marginBottom: 20\n            }} id=\"outlined-basic\" fullWidth={true} label=\"email\" variant=\"outlined\" />\n        <TextField\n            type={'password'}\n            onChange={handleInput}\n            value={password}\n            name={'password'}\n            style={{\n                marginBottom: 20\n            }} id=\"outlined-basic\" fullWidth={true} label=\"password\" variant=\"outlined\" />\n        <Button onClick={loginButtonClicked} color=\"primary\">로그인</Button>\n    </Container>\n}\n\nexport default Presenter","import Form from './presenter'\nexport default Form","import React from 'react'\nimport styled from 'styled-components'\nimport Form from './Form'\n\ninterface IProps {\n    email: string\n    password: string\n    handleInput: (e: React.ChangeEvent<HTMLInputElement>) => void\n    loginButtonClicked: () => void\n}\n\nconst Container = styled.div`\n    width:100%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    padding-top:200px;\n`\n\nconst Presenter: React.FC<IProps> = ({\n    email,\n    password,\n    handleInput,\n    loginButtonClicked\n}) => {\n    return <Container>\n        <Form\n            email={email}\n            password={password}\n            handleInput={handleInput}\n            loginButtonClicked={loginButtonClicked}\n        />\n    </Container>\n}\n\nexport default Presenter","import React from 'react'\nimport Presenter from './presenter'\nimport { connect } from 'react-redux'\nimport { IState } from '../../../types'\nimport { userLogin } from '../../../actions/user'\n\ninterface IProps {\n    userLogin: (email: string, password: string) => void\n}\n\nclass Container extends React.Component<IProps> {\n\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n\n    render() {\n        const {\n            email,\n            password\n        } = this.state\n        const {\n            handleInput,\n            loginButtonClicked\n        } = this\n        return <Presenter\n            email={email}\n            password={password}\n            handleInput={handleInput}\n            loginButtonClicked={loginButtonClicked}\n        />\n    }\n\n    loginButtonClicked = () => {\n        const { email, password } = this.state;\n        const { userLogin } = this.props;\n        userLogin(email, password)\n    }\n\n    handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n}\n\nconst mapStateToProps = (state: IState) => {\n    return {}\n}\n\nexport default connect(mapStateToProps, {\n    userLogin\n})(Container)","import LoginForm from './container'\nexport default LoginForm","import React from 'react'\nimport styled from 'styled-components'\nimport LoginForm from '../LoginForm'\n\nconst Container = styled.div`\n    width:100%;\n`\n\nconst Presenter: React.FC = () => {\n    return <Container>\n        <LoginForm />\n    </Container>\n}\n\nexport default Presenter","import PublicComponent from './container'\nexport default PublicComponent","import React from 'react'\nimport Presenter from './presenter'\n\nclass Container extends React.Component {\n    render() {\n        return <Presenter />\n    }\n}\n\nexport default Container","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:100%;\n    background:rgba(0,0,0,0.4);\n    color:white;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n`\n\nconst Presenter: React.FC = () => {\n    return <Container>\n        Loading...\n    </Container>\n}\n\nexport default Presenter","import Loading from './presenter'\nexport default Loading","import React from 'react';\nimport { connect } from 'react-redux'\nimport { IState } from './types';\nimport PrivateComponent from './components/private/privateComponent';\nimport PublicComponent from './components/public/publicComponent';\nimport Loading from './components/global/Loading';\n\ninterface Props {\n  isLoggedIn: boolean,\n  loading: boolean\n}\n\nclass AppContainer extends React.Component<Props> {\n\n  render() {\n    const {\n      isLoggedIn,\n      loading\n    } = this.props;\n    return <App\n      isLoggedIn={isLoggedIn}\n      loading={loading}\n    />\n  }\n}\n\ninterface PresenterProps {\n  isLoggedIn: boolean\n  loading: boolean\n}\n\nconst App: React.FC<PresenterProps> = ({\n  isLoggedIn,\n  loading\n}) => {\n  return (\n    <div>\n      {isLoggedIn ? <PrivateComponent /> : <PublicComponent />}\n      {loading && <Loading />}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: IState) => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    loading: state.loading.loading\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {})(AppContainer);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { IUser } from \"../types\"\nimport { USER_LOGIN, USER_LOGOUT } from \"../actions/types\"\n\ninterface IAction {\n    type: string,\n    user: IUser,\n    token: string\n}\n\n\nconst initialState: IUser = {\n    isLoggedIn: localStorage.getItem('tk') ? true : false,\n    email: \"\",\n    name: \"\",\n    phone: \"\"\n}\n\nexport default function (state: IUser = initialState, action: IAction) {\n    switch (action.type) {\n        case USER_LOGIN:\n            return userLoginReducer(state, action)\n        case USER_LOGOUT:\n            return userLogoutReducer(state, action)\n        default:\n            return state\n    }\n}\n\nconst userLogoutReducer = (state: IUser, action: IAction): IUser => {\n    window.localStorage.removeItem('tk')\n    return {\n        ...state,\n        isLoggedIn: false,\n        email: \"\",\n        name: \"\",\n        phone: \"\"\n    }\n}\n\nconst userLoginReducer = (state: IUser, action: IAction): IUser => {\n    const {\n        user,\n        token\n    } = action\n    const {\n        email,\n        name,\n        phone\n    } = user\n    window.localStorage.setItem('tk', token)\n    return {\n        ...state,\n        isLoggedIn: true,\n        email,\n        name,\n        phone\n    }\n}","import { IMenu, IMenuReducerProps } from \"../types\";\nimport { FETCH_MENUS, PUT_NEW_MENU } from \"../actions/types\";\n\ninterface IAction {\n    type: string\n    menus: IMenu[]\n    menu: IMenu\n}\n\nconst initialState: IMenuReducerProps = {\n    menus: [],\n    loading: true\n}\n\nexport default function (state: IMenuReducerProps = initialState, action: IAction) {\n    switch (action.type) {\n        case FETCH_MENUS:\n            return getMenus(state, action)\n        case PUT_NEW_MENU:\n            return putMenu(state, action)\n        default:\n            return state\n    }\n}\n\nconst putMenu = (state: IMenuReducerProps, action: IAction): IMenuReducerProps => {\n    const { menu } = action;\n    const updatedMenus = state.menus.map(object => {\n        if (object._id === menu._id) {\n            return menu\n        } else {\n            return object\n        }\n    })\n    return {\n        ...state,\n        menus: updatedMenus\n    }\n}\n\nconst getMenus = (state: IMenuReducerProps, action: IAction): IMenuReducerProps => {\n    const { menus } = action\n    return {\n        ...state,\n        menus,\n        loading: false\n    }\n}","import { IMenu, IMenuReducerProps } from '../types'\nimport { FETCH_MENU_BOARDS } from '../actions/types'\n\ninterface IAction {\n    type: string\n    menus: IMenu[]\n}\n\nconst initialState: IMenuReducerProps = {\n    menus: [],\n    loading: true\n}\n\nexport default function (state: IMenuReducerProps = initialState, action: IAction) {\n    switch (action.type) {\n\n        case FETCH_MENU_BOARDS:\n            return fetchMenuboardsReducer(state, action)\n\n        default:\n            return state\n    }\n}\n\nfunction fetchMenuboardsReducer(state: IMenuReducerProps, action: IAction): IMenuReducerProps {\n    const {\n        menus\n    } = action\n    return {\n        ...state,\n        menus,\n        loading: false\n    }\n}","import { ILoading } from \"../types\"\nimport { TURN_ON_LOADING, TURN_DOWN_LOADING } from \"../actions/types\"\n\ninterface IAction {\n    type: string\n}\n\nconst initialState: ILoading = {\n    loading: false\n}\n\nexport default function (state = initialState, action: IAction) {\n    switch (action.type) {\n\n        case TURN_ON_LOADING:\n            return turnOnLoadingReducer(state, action)\n\n        case TURN_DOWN_LOADING:\n            return turnDownLoadingReducer(state, action)\n\n        default:\n            return state\n    }\n}\n\nconst turnDownLoadingReducer = (state: ILoading, action: IAction): ILoading => {\n    return {\n        ...state,\n        loading: false\n    }\n}\n\nconst turnOnLoadingReducer = (state: ILoading, action: IAction): ILoading => {\n    return {\n        ...state,\n        loading: true\n    }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport user from './user'\nimport menu from './menu'\nimport menuBoard from './menuBoard'\nimport loading from './loading'\n\nconst intialState = {}\n\nconst allReducers = combineReducers({\n    user,\n    loading,\n    menu,\n    menuBoard\n})\n\n\n// @ts-ignore\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(allReducers, intialState, composeEnhancer(applyMiddleware(thunk)))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport store from './reducer'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export let dev: boolean = false\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n    // dev code\n    dev = true\n} else {\n    // production code\n    dev = false\n}\n\n\nexport let KBU_CAFETERIA_SERVER: string = 'http://localhost:4001/api/'\n\nif (dev) {\n    KBU_CAFETERIA_SERVER = 'http://localhost:4001/api/'\n} else {\n    // 나중에 이곳을 처리해주어야 함. \n    KBU_CAFETERIA_SERVER = 'https://api.kbucard.com:4001/api/'\n}\n\n","import { IMenu } from \"../types\";\nimport { Dispatch } from \"react\";\nimport axios from 'axios'\nimport { KBU_CAFETERIA_SERVER } from \"../consts\";\nimport { TURN_ON_LOADING, FETCH_MENUS, TURN_DOWN_LOADING, PUT_NEW_MENU } from \"./types\";\n\ninterface IPutNewMenuDispatch {\n    type: string\n    menu?: IMenu\n}\n\ninterface IPutNewMenuResponse {\n    ok: boolean\n    error: string\n    menu: IMenu\n}\n\nexport const putNewMenu = (menu: IMenu) => (dispatch: Dispatch<IPutNewMenuDispatch>) => {\n    dispatch({\n        type: TURN_ON_LOADING\n    })\n    axios.put(`${KBU_CAFETERIA_SERVER}menu`, {\n        menu\n    }, {\n        headers: {\n            'authentication': localStorage.getItem('tk')\n        }\n    })\n        .then(res => res.data)\n        .then((data: IPutNewMenuResponse) => {\n            const { ok, error, menu } = data\n            if (ok) {\n                dispatch({\n                    type: PUT_NEW_MENU,\n                    menu\n                })\n            } else {\n                console.error(`Error occured at [${__dirname}]: ${error}`)\n                alert(error)\n                window.location.href = '/'\n            }\n        })\n        .catch(err => {\n            console.error(`Error occured at [${__dirname}]: ${err}`)\n            alert(err.message)\n            window.location.href = '/'\n        })\n    dispatch({\n        type: TURN_DOWN_LOADING\n    })\n}\n\n\n\ninterface IFetchMenusDispatch {\n    type: string\n    menus: IMenu[]\n\n}\n\ninterface IFetchMenusResponseData {\n    ok: boolean\n    error: string\n    menus: IMenu[]\n}\n\nexport const fetchMenus = (year: number, month: number) => (dispatch: Dispatch<IFetchMenusDispatch>) => {\n    dispatch({\n        type: TURN_ON_LOADING,\n        menus: []\n    })\n    axios.get(`${KBU_CAFETERIA_SERVER}menu/${year}/${month}`, {\n        headers: {\n            'authentication': localStorage.getItem('tk')\n        }\n    })\n        .then(res => res.data)\n        .then((data: IFetchMenusResponseData) => {\n            const { ok, error, menus } = data\n            if (ok) {\n                dispatch({\n                    type: FETCH_MENUS,\n                    menus\n                })\n                dispatch({\n                    type: TURN_DOWN_LOADING,\n                    menus: []\n                })\n                return\n            } else {\n                console.error(`Error occured at [${__dirname}]:${error}`)\n                alert(`${year}년 ${month + 1}월 메뉴들을 요청하던 도중에 에러가 발생하였습니다.`)\n                window.location.href = '/'\n                dispatch({\n                    type: TURN_DOWN_LOADING,\n                    menus: []\n                })\n                return\n            }\n        })\n        .catch(err => {\n            console.error(err)\n            alert(`${year}년 ${month}월 메뉴들을 요청하던 도중에 에러가 발생하였습니다.`)\n            window.location.href = '/'\n            dispatch({\n                type: TURN_DOWN_LOADING,\n                menus: []\n            })\n            return\n        })\n}"],"sourceRoot":""}